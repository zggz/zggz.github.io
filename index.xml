<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zggz Book</title>
    <link>https://zggz.github.io/</link>
    <description>Recent content on zggz Book</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 07 May 2022 22:05:55 +0800</lastBuildDate><atom:link href="https://zggz.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extends</title>
      <link>https://zggz.github.io/docs/notes/typescript/extends/</link>
      <pubDate>Sat, 07 May 2022 22:05:55 +0800</pubDate>
      
      <guid>https://zggz.github.io/docs/notes/typescript/extends/</guid>
      <description>extends #   官方文档
接口继承和类型判断
继承扩展 #  1interface Person{ 2 name: string 3} 4 5interface Sudent extends Person{ 6 age: number 7} 8// Student =&amp;gt; {name: string ge:number} 泛型约束 #   在使用泛型的时候，可以通过extends来对类型参数的限制； 以下的案例可以限制obj传入的对象必须包含name字段  1function getName&amp;lt;T extends {name:string}, K extends keyof T&amp;gt;(obj:T, key:K){ 2 return obj[key] 3} 条件判断 #   当extends和type一起使用的时候，会作为条件判断 如果extends前面的类型能够赋值给extends后面的类型，那么表达式判断为真，否则为假。 extends前面的类型一定包含后一个类型  1interface Point{ 2 x: number 3 y: number 4} 5interface PointY{ 6 y:number 7} 8type P = Point extends PointY ?</description>
    </item>
    
    <item>
      <title>Record</title>
      <link>https://zggz.github.io/docs/notes/typescript/record/</link>
      <pubDate>Sat, 30 Apr 2022 14:40:49 +0800</pubDate>
      
      <guid>https://zggz.github.io/docs/notes/typescript/record/</guid>
      <description>Record&amp;lt;Keys, Type&amp;gt; #   官方文档
定义一个对象的key和value类型
构造一个对象类型，其属性键为Keys，其属性值为Type。 此实用程序可用于将一种类型的属性映射到另一种类。
接口 #  1// 定义 2// type Record&amp;lt;K extends keyof any, T&amp;gt; = { 3// [P in K]: T; 4// }; 5interface Person { 6 age: number 7 name: string 8} 9type School = &amp;#39;student&amp;#39; | &amp;#39;teacher&amp;#39; 10const school: Record&amp;lt;School, Person&amp;gt; = { 11 student: { 12 name: &amp;#39;tom&amp;#39;, 13 age: 12 14 }, 15 teacher:{ 16 name: &amp;#39;sam&amp;#39;, 17 age:20 18 } 19} 基础类型 #  1type Num = &amp;#34;one&amp;#34; | &amp;#34;two&amp;#34; 2 3const num: Record&amp;lt;Num, number&amp;gt; = { 4 one:1, 5 two:2 6} </description>
    </item>
    
    <item>
      <title>Keyof</title>
      <link>https://zggz.github.io/docs/notes/typescript/keyof/</link>
      <pubDate>Sat, 07 May 2022 15:56:35 +0800</pubDate>
      
      <guid>https://zggz.github.io/docs/notes/typescript/keyof/</guid>
      <description>keyof #  该操作符用于获取某种类型的所有键,其返回的类型是联合类型
获取类型 #  1interface Ponit{ 2 x:number 3 y:number 4} 5 6type P = keyof Ponit // &amp;#39;x&amp;#39; | &amp;#39;y&amp;#39; 索引签名 #  1type Arrayish = { 2 [n:number]: unknown 3} 4type A = keyof Arrayish // number 常用场景 #  定义一个函数，通过key来获取对象的值，通常我们并不知道对象包含的key集合</description>
    </item>
    
    <item>
      <title>记-浮生六记</title>
      <link>https://zggz.github.io/readbook/0501/</link>
      <pubDate>Sun, 01 May 2022 21:52:26 +0800</pubDate>
      
      <guid>https://zggz.github.io/readbook/0501/</guid>
      <description>《浮生六记》- 沈复
无人与我立黄昏，无人问我粥可温。
无人与我捻熄灯，无人共我书半生。
无人陪我夜已深，无人与我把酒分。
无人拭我相思泪，无人梦我与前尘。
无人陪我顾星辰，无人醒我茶已冷。
无人听我述衷肠，无人解我心头梦。
无人拘我言中泪，无人愁我独行路。
回首向来萧瑟处，无人等在灯火阑珊处。</description>
    </item>
    
    <item>
      <title>git命令</title>
      <link>https://zggz.github.io/docs/notes/tools/git/</link>
      <pubDate>Thu, 19 Nov 2020 00:18:12 +0000</pubDate>
      
      <guid>https://zggz.github.io/docs/notes/tools/git/</guid>
      <description> 本地与远程的分支列表不一致(在gitlab管理界面删除分支之后) 1git remote update origin --prune  error: failed to push some refs to 1git pull --rebase origin master 2git push -u origin master  拉取git子模块 1git submodule update --init --force   </description>
    </item>
    
    <item>
      <title>vim常用命令</title>
      <link>https://zggz.github.io/docs/notes/tools/vim/</link>
      <pubDate>Thu, 19 Nov 2020 00:18:12 +0000</pubDate>
      
      <guid>https://zggz.github.io/docs/notes/tools/vim/</guid>
      <description>主要记录 vim 使用过程中的快捷键
输入模式 #   i 切换输入模式 a 光标后插入 A 光标行尾插入 i 光标前插入 I 光标行首插入 o 打开向下打开新行 O 打开向上打开新行  退出模式 #   esc  保存 #   w wq wq！ q!</description>
    </item>
    
  </channel>
</rss>
